<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://java.sun.com/xml/ns/javaee" xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_2_5.xsd" version="2.5">
    <display-name>Appointment-Management-System</display-name>
    <servlet>
        <servlet-name>DispatcherServlet</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/spring/spring-context.xml</param-value>
        </init-param>
    </servlet>

    <servlet-mapping>
        <servlet-name>DispatcherServlet</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>
    
    <!-- root context -->
    <context-param>
    	<param-name>contextConfigLocation</param-name>
    	<param-value>
    		/WEB-INF/spring/application-context.xml
    		/WEB-INF/spring/security-context.xml
    		/WEB-INF/spring/jms-sender-context.xml
    	</param-value>
    </context-param>
    
    <!-- The security-context is loaded into the root WebApplicationContext
	     as it is NOT Spring MVC specific [DispatcherServlet] -->
	<listener>
		<listener-class>
			org.springframework.web.context.ContextLoaderListener 
		</listener-class>
	</listener>
	
	<!-- springSecurityFilterChain == an internal infrastructure bean 
				created based on namespace enabling of security
				<http auto-config='true'> -->
	<filter>
	<filter-name>springSecurityFilterChain</filter-name>
		<filter-class>
			org.springframework.web.filter.DelegatingFilterProxy
		</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>springSecurityFilterChain</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>
